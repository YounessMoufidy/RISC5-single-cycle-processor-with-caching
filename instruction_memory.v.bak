

module instruction_memory
	#(
		parameter BUS_WIDTH					=32									,
		parameter INST_MEM_WIDTH			=8										,
		parameter INST_MEM_DEPTH			=32									,
		parameter INST_MEM_ADDR_WIDTH		=$clog2(INST_MEM_DEPTH)
	 )
	(
		input	 wire i_InstructionAddress	,
		output reg  o_Instruction			 	
	);
	
	
	// Declare the memory array
	reg [INST_MEM_WIDTH-1:0] InstMemArray [0:INST_MEM_DEPTH-1];
	
	
	initial begin
		// add $3,$1,$2
		
		InstMemArray[0]=8'h00;
		InstMemArray[1]=8'h20;
		InstMemArray[2]=8'h01;
		InstMemArray[3]=8'hB3;
		
		// sub $1,$3,$2
		InstMemArray[4]=8'h40;
		InstMemArray[5]=8'h21;
		InstMemArray[6]=8'h80;
		InstMemArray[7]=8'hB3;
		
		//others=>0
		//InstMemArray[8:INST_MEM_DEPTH-1]=0;

	end
	
	always @(*) begin
		
		o_Instruction<=InstMemArray[i_InstructionAddress]&InstMemArray[i_InstructionAddress+1]&InstMemArray[i_InstructionAddress+2]&InstMemArray[i_InstructionAddress+3];
	
	end


endmodule